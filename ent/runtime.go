// Code generated by entc, DO NOT EDIT.

package ent

import (
	"github.com/masseelch/go-api-skeleton/ent/job"
	"github.com/masseelch/go-api-skeleton/ent/schema"
	"github.com/masseelch/go-api-skeleton/ent/user"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	jobFields := schema.Job{}.Fields()
	_ = jobFields
	// jobDescState is the schema descriptor for state field.
	jobDescState := jobFields[3].Descriptor()
	// job.DefaultState holds the default value on creation for the state field.
	job.DefaultState = jobDescState.Default.(string)
	// jobDescRiskAssessmentRequired is the schema descriptor for riskAssessmentRequired field.
	jobDescRiskAssessmentRequired := jobFields[8].Descriptor()
	// job.DefaultRiskAssessmentRequired holds the default value on creation for the riskAssessmentRequired field.
	job.DefaultRiskAssessmentRequired = jobDescRiskAssessmentRequired.Default.(bool)
	// jobDescMaintenanceRequired is the schema descriptor for maintenanceRequired field.
	jobDescMaintenanceRequired := jobFields[9].Descriptor()
	// job.DefaultMaintenanceRequired holds the default value on creation for the maintenanceRequired field.
	job.DefaultMaintenanceRequired = jobDescMaintenanceRequired.Default.(bool)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescEmail is the schema descriptor for email field.
	userDescEmail := userFields[1].Descriptor()
	// user.EmailValidator is a validator for the "email" field. It is called by the builders before save.
	user.EmailValidator = userDescEmail.Validators[0].(func(string) error)
	// userDescEnabled is the schema descriptor for enabled field.
	userDescEnabled := userFields[3].Descriptor()
	// user.DefaultEnabled holds the default value on creation for the enabled field.
	user.DefaultEnabled = userDescEnabled.Default.(bool)
}
