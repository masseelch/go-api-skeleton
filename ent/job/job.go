// Code generated by entc, DO NOT EDIT.

package job

const (
	// Label holds the string label denoting the job type in the database.
	Label = "job"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldDate holds the string denoting the date field in the database.
	FieldDate = "date"
	// FieldTask holds the string denoting the task field in the database.
	FieldTask = "task"
	// FieldState holds the string denoting the state field in the database.
	FieldState = "state"
	// FieldReport holds the string denoting the report field in the database.
	FieldReport = "report"
	// FieldRest holds the string denoting the rest field in the database.
	FieldRest = "rest"
	// FieldNote holds the string denoting the note field in the database.
	FieldNote = "note"
	// FieldCustomerName holds the string denoting the customername field in the database.
	FieldCustomerName = "customer_name"
	// FieldRiskAssessmentRequired holds the string denoting the riskassessmentrequired field in the database.
	FieldRiskAssessmentRequired = "risk_assessment_required"
	// FieldMaintenanceRequired holds the string denoting the maintenancerequired field in the database.
	FieldMaintenanceRequired = "maintenance_required"

	// EdgeUsers holds the string denoting the users edge name in mutations.
	EdgeUsers = "users"

	// Table holds the table name of the job in the database.
	Table = "jobs"
	// UsersTable is the table the holds the users relation/edge. The primary key declared below.
	UsersTable = "job_users"
	// UsersInverseTable is the table name for the User entity.
	// It exists in this package in order to avoid circular dependency with the "user" package.
	UsersInverseTable = "users"
)

// Columns holds all SQL columns for job fields.
var Columns = []string{
	FieldID,
	FieldDate,
	FieldTask,
	FieldState,
	FieldReport,
	FieldRest,
	FieldNote,
	FieldCustomerName,
	FieldRiskAssessmentRequired,
	FieldMaintenanceRequired,
}

var (
	// UsersPrimaryKey and UsersColumn2 are the table columns denoting the
	// primary key for the users relation (M2M).
	UsersPrimaryKey = []string{"job_id", "user_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultState holds the default value on creation for the state field.
	DefaultState string
	// DefaultRiskAssessmentRequired holds the default value on creation for the riskAssessmentRequired field.
	DefaultRiskAssessmentRequired bool
	// DefaultMaintenanceRequired holds the default value on creation for the maintenanceRequired field.
	DefaultMaintenanceRequired bool
)
