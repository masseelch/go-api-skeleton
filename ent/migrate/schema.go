// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"github.com/facebook/ent/dialect/sql/schema"
	"github.com/facebook/ent/schema/field"
)

var (
	// JobsColumns holds the columns for the "jobs" table.
	JobsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "date", Type: field.TypeTime, Nullable: true},
		{Name: "task", Type: field.TypeString, Size: 2147483647},
		{Name: "state", Type: field.TypeString, Default: "open"},
		{Name: "report", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "rest", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "note", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "customer_name", Type: field.TypeString, Nullable: true},
		{Name: "risk_assessment_required", Type: field.TypeBool},
		{Name: "maintenance_required", Type: field.TypeBool},
	}
	// JobsTable holds the schema information for the "jobs" table.
	JobsTable = &schema.Table{
		Name:        "jobs",
		Columns:     JobsColumns,
		PrimaryKey:  []*schema.Column{JobsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// SessionsColumns holds the columns for the "sessions" table.
	SessionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "idle_time_expired_at", Type: field.TypeTime},
		{Name: "life_time_expired_at", Type: field.TypeTime},
		{Name: "user_sessions", Type: field.TypeInt, Nullable: true},
	}
	// SessionsTable holds the schema information for the "sessions" table.
	SessionsTable = &schema.Table{
		Name:       "sessions",
		Columns:    SessionsColumns,
		PrimaryKey: []*schema.Column{SessionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "sessions_users_sessions",
				Columns: []*schema.Column{SessionsColumns[3]},

				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "email", Type: field.TypeString, Unique: true},
		{Name: "password", Type: field.TypeString},
		{Name: "enabled", Type: field.TypeBool},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:        "users",
		Columns:     UsersColumns,
		PrimaryKey:  []*schema.Column{UsersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// JobUsersColumns holds the columns for the "job_users" table.
	JobUsersColumns = []*schema.Column{
		{Name: "job_id", Type: field.TypeInt},
		{Name: "user_id", Type: field.TypeInt},
	}
	// JobUsersTable holds the schema information for the "job_users" table.
	JobUsersTable = &schema.Table{
		Name:       "job_users",
		Columns:    JobUsersColumns,
		PrimaryKey: []*schema.Column{JobUsersColumns[0], JobUsersColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "job_users_job_id",
				Columns: []*schema.Column{JobUsersColumns[0]},

				RefColumns: []*schema.Column{JobsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:  "job_users_user_id",
				Columns: []*schema.Column{JobUsersColumns[1]},

				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		JobsTable,
		SessionsTable,
		UsersTable,
		JobUsersTable,
	}
)

func init() {
	SessionsTable.ForeignKeys[0].RefTable = UsersTable
	JobUsersTable.ForeignKeys[0].RefTable = JobsTable
	JobUsersTable.ForeignKeys[1].RefTable = UsersTable
}
